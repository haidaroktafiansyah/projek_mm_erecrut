{
  "content": {
    "type": "API",
    "structure": "",
    "server_on_load": "async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const getdata = async (iddata) => {\n    try {\n      const data = await db.proses_Apply.findUnique({\n        where: {\n          id: parseInt(iddata),\n        },\n        include: {\n          User: true,\n          Lowongan_Kerja: true,\n          Departemen: true,\n          admin: true,\n        },\n      });\n      reply.send({\n        data: data,\n      });\n    } catch (e) {\n      reply.send().code(404);\n    }\n  };\n\n  const postdata = async (iddata) => {\n    const schema = Joi.object({\n      status: Joi.string().alphanum().min(3).max(30).required(),\n    });\n\n    const validator = schema.validate(req.body);\n    if (typeof validator.error === \"undefined\") {\n      try {\n        const data = await db.proses_Apply.update({\n          where: {\n            id: Number(iddata),\n          },\n          data: req.body,\n        });\n        reply.send({\n          data: data,\n          status: \"success updated\",\n        });\n      } catch (error) {\n        reply.send({\n          status: \"error to send data\",\n        });\n      }\n    } else {\n      reply.send(validator.error);\n    }\n  };\n\n  const deletedata = async (iddata) => {\n    const data = await db.proses_Apply.delete({\n      where: {\n        id: Number(iddata),\n      },\n    });\n    reply.send({\n      data: data,\n      status: \"success deleted\",\n    });\n  };\n\n  switch (req.method) {\n    case \"GET\":\n      getdata(params.id);\n      break;\n    case \"POST\":\n      postdata(params.id);\n      break;\n    case \"DELETE\":\n      deletedata(params.id);\n      break;\n  }\n}",
    "figma": {}
  },
  "title": "proses-apply-id",
  "type": "cms-template",
  "lang": "",
  "status": "SYSTEM",
  "parent_id": "54643",
  "slug": "api/prosesapply/d/:id",
  "site": "*",
  "id": "17290"
}
