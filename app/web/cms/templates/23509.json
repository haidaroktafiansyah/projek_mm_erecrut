{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const getdata = async (iddata) => {\n    try {\n      const data = await db.lowongan_Kerja.findUnique({\n        where: {\n          id: parseInt(iddata),\n        },\n        include: {\n          Status_Pekerja: true,\n          Kebutuhan_loker: true,\n        },\n      });\n      reply.send({\n        data: data,\n      });\n    } catch (e) {\n      reply.send().code(404);\n    }\n  };\n\n  const postdata = async (iddata) => {\n    const schema = ext.Joi.object({\n      status_loker: ext.Joi.string().min(3).max(255).required(),\n      info: ext.Joi.string().min(3).max(255).required(),\n      start_open: ext.Joi.required(),\n      end_open: ext.Joi.required(),\n      jumlah_diterima: ext.Joi.number().required(),\n      status_lowongan: ext.Joi.string().min(3).max(255).required(),\n    });\n\n    const event = await new Date(req.body.start_open);\n    const event2 = await new Date(req.body.end_open);\n\n    const validator = await schema.validate(req.body);\n\n    if (typeof validator.error === \"undefined\") {\n      try {\n        const data = await db.lowongan_Kerja.update({\n          where: {\n            id: Number(iddata),\n          },\n          data: {\n            status_loker: req.body.status_loker,\n            info: req.body.info,\n            start_open: event.toISOString(),\n            jumlah_diterima: parseInt(req.body.jumlah_diterima),\n            end_open: event2.toISOString(),\n            status_lowongan: req.body.status_lowongan,\n            status_PekerjaId: parseInt(req.body.id_status_pekerja),\n            kebutuhan_lokerId: parseInt(req.body.id_kebutuhan_loker),\n          },\n        });\n        reply.send({\n          data: data,\n          status: \"success updated\",\n        });\n      } catch (error) {\n        reply.send({\n          status: \"error to send data\",\n        });\n      }\n    } else {\n      reply.send(validator.error);\n    }\n  };\n\n  const deletedata = async (iddata) => {\n    const data = await db.lowongan_Kerja.delete({\n      where: {\n        id: Number(iddata),\n      },\n    });\n    reply.send({\n      data: data,\n      status: \"success deleted\",\n    });\n  };\n\n  switch (req.method) {\n    case \"GET\":\n      getdata(params.id);\n      break;\n    case \"POST\":\n      postdata(params.id);\n      break;\n    case \"DELETE\":\n      deletedata(params.id);\n      break;\n  }\n}","figma":{}},"title":"lowongan-kerja-id","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"api/lowongankerja/d/:id","site":"*","id":"23509"}