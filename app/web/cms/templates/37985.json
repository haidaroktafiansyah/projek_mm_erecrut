{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const getdata = async () => {\n    const data = await db.proses_Apply.findMany({\n      include: {\n        User: true,\n        Lowongan_Kerja: true,\n        Departemen: true,\n        admin: true,\n      },\n    });\n    reply.send({\n      data: data,\n    });\n  };\n\n  const checkuserdata = async (iddata) => {\n    try {\n      const datausernow = await db.user.findUnique({\n        where: {\n          id: parseInt(iddata),\n        },\n      });\n      if (\n        datausernow.NIK != null &&\n        datausernow.alamat != null &&\n        datausernow.jenis_kelamin != null &&\n        datausernow.nama_lengkap != null &&\n        datausernow.nomor_hp != null &&\n        datausernow.tanggal_lahir != null\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      reply.send(\"not found\").code(404);\n    }\n  };\n\n  const postdata = async () => {\n    const schema = ext.Joi.object({\n      status: ext.Joi.string().min(3).max(30).required(),\n      userId: ext.Joi.number().required(),\n      lowongan_KerjaId: ext.Joi.number().required(),\n      departemenId: ext.Joi.number().required(),\n    });\n\n    const validator = await schema.validate(req.body);\n    if (typeof validator.error === \"undefined\") {\n      try {\n        const checkuserprofile = await checkuserdata(parseInt(req.body.userId));\n        if (checkuserprofile) {\n          const data = await db.proses_Apply.create({\n            data: {\n              status: req.body.status,\n              userId: parseInt(req.body.userId),\n              lowongan_KerjaId: parseInt(req.body.lowongan_KerjaId),\n              departemenId: parseInt(req.body.departemenId),\n            },\n          });\n          reply.send({\n            data: data,\n            status: \"success created\",\n          });\n        } else {\n          reply.send({\n            data: \"user data belum lengkap\",\n          });\n        }\n      } catch (error) {\n        reply.send({\n          status: \"error to send data\",\n        });\n      }\n    } else {\n      reply.send(validator.error);\n    }\n  };\n\n  switch (req.method) {\n    case \"GET\":\n      getdata();\n      break;\n    case \"POST\":\n      postdata();\n      break;\n  }\n}","figma":{}},"title":"proses-apply","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"api/prosesapply","site":"*","id":"37985"}